{"version":3,"sources":["index.js"],"names":["tf","require","names","App","_React$Component","_getPrototypeOf2","_this","Object","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","state","model","preview","predictions","onDrop","accepted","rejected","links","setState","cropToCanvas","image","canvas","ctx","naturalWidth","naturalHeight","clearRect","width","height","fillStyle","fillRect","ratio","Math","min","newWidth","round","newHeight","drawImage","onImageChange","e","c","document","getElementById","getContext","target","_this$state$model$inp","inputs","shape","slice","_this$state$model$inp2","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","modelWidth","modelHeight","input","tidy","resizeBilinear","browser","fromPixels","div","expandDims","executeAsync","then","res","font","textBaseline","i","_res","boxes","scores","classes","valid_detections","boxes_data","dataSync","scores_data","classes_data","valid_detections_data","dispose","_boxes_data$slice","_boxes_data$slice2","x1","y1","x2","y2","klass","score","toFixed","strokeStyle","lineWidth","strokeRect","textWidth","measureText","textHeight","parseInt","a","b","_boxes_data$slice3","_boxes_data$slice4","fillText","wariai","green","String","riped","ritu","console","log","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_Users_fukuda_R4_appli_20221121detection_score_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","_this2","loadGraphModel","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","react_magic_dropzone__WEBPACK_IMPORTED_MODULE_8___default","accept","multiple","alt","onLoad","src","id","React","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.33671276.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MagicDropzone from \"react-magic-dropzone\";\r\n\r\nimport \"./styles.css\";\r\nconst tf = require('@tensorflow/tfjs');\r\n\r\nconst weights = 'web_model/model.json';\r\n\r\n\r\nconst names = ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',\r\n               'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'g', 'r', 'horse', 'sheep', 'cow',\r\n               'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee',\r\n               'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard',\r\n               'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',\r\n               'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch',\r\n               'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',\r\n               'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear',\r\n               'hair drier', 'toothbrush']\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    model: null,\r\n    preview: \"\",\r\n    predictions: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    tf.loadGraphModel(weights).then(model => {\r\n      this.setState({\r\n        model: model\r\n      });\r\n    });\r\n  }\r\n\r\n  onDrop = (accepted, rejected, links) => {\r\n    this.setState({ preview: accepted[0].preview || links[0] });\r\n  };\r\n\r\n  cropToCanvas = (image, canvas, ctx) => {\r\n    const naturalWidth = image.naturalWidth;\r\n    const naturalHeight = image.naturalHeight;\r\n\r\n    // canvas.width = image.width;\r\n    // canvas.height = image.height;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    const ratio = Math.min(canvas.width / image.naturalWidth, canvas.height / image.naturalHeight);\r\n    const newWidth = Math.round(naturalWidth * ratio);\r\n    const newHeight = Math.round(naturalHeight * ratio);\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      naturalWidth,\r\n      naturalHeight,\r\n      (canvas.width - newWidth) / 2,\r\n      (canvas.height - newHeight) / 2,\r\n      newWidth,\r\n      newHeight,\r\n    );\r\n\r\n  };\r\n\r\n\r\n\r\n  onImageChange = e => {\r\n    const c = document.getElementById(\"canvas\");\r\n    const ctx = c.getContext(\"2d\");\r\n    this.cropToCanvas(e.target, c, ctx);\r\n    // もと　let [modelWidth, modelHeight] = this.state.model.inputs[0].shape.slice(1, 3);\r\n\r\n    let [modelWidth, modelHeight] = this.state.model.inputs[0].shape.slice(1, 3);\r\n\r\n\r\n\r\n    const input = tf.tidy(() => {\r\n      return tf.image.resizeBilinear(tf.browser.fromPixels(c), [modelWidth, modelHeight])\r\n        .div(255.0).expandDims(0);\r\n    });\r\n    this.state.model.executeAsync(input).then(res => {\r\n      // Font options.\r\n      const font = \"9px sans-serif\";\r\n      ctx.font = font;\r\n      ctx.textBaseline = \"top\";\r\n\r\n      const [boxes, scores, classes, valid_detections] = res;\r\n      const boxes_data = boxes.dataSync();\r\n      const scores_data = scores.dataSync();\r\n      const classes_data = classes.dataSync();\r\n      const valid_detections_data = valid_detections.dataSync()[0];\r\n\r\n      tf.dispose(res)\r\n\r\n\r\n\r\n\r\n\r\n\r\n      var i;\r\n      for (i = 0; i < valid_detections_data; ++i){\r\n        let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n        x1 *= c.width;\r\n        x2 *= c.width;\r\n        y1 *= c.height;\r\n        y2 *= c.height;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const klass = names[classes_data[i]];\r\n        const score = scores_data[i].toFixed(2);\r\n\r\n\r\n        // Draw the bounding box.\r\n        ctx.strokeStyle = \"#00000050\";\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeRect(x1, y1, width, height);\r\n\r\n        // Draw the label background.\r\n        ctx.fillStyle = \"#f0f8ff50\";\r\n        const textWidth = ctx.measureText(klass + \":\" + score).width;\r\n        const textHeight = parseInt(font, 10); // base 10\r\n        ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\r\n\r\n\r\n\r\n      };\r\n\r\n      let a = 0;\r\n      let b = 0;\r\n\r\n      for (i = 0; i < valid_detections_data; ++i){\r\n        let [x1, y1, , ] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n        x1 *= c.width;\r\n        y1 *= c.height;\r\n        const klass = names[classes_data[i]];\r\n        const score = scores_data[i].toFixed(2);\r\n\r\n        // Draw the text last to ensure it's on top.\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(klass + \":\" + score, x1, y1);\r\n        \r\n        //console.log(classes_data[i]);\r\n        \r\n\r\n\r\n        if (classes_data[i] === 16){\r\n          //console.log(\"16:\", a = 1 + a);\r\n          (a = 1 + a);            \r\n        } //else {console.log(\"その他\")}\r\n\r\n        else {a = a + 0}\r\n\r\n        if (classes_data[i] === 15){\r\n          //console.log(\"15:\", b = 1 + b);\r\n          (b = 1 + b);            \r\n        } //else {console.log(\"その他\")}\r\n\r\n        //else {console.log(\"その他\")}\r\n        else {(b = b + 0)}\r\n      }\r\n\r\n      let wariai = Math.round((a/(a+b))*100)\r\n\r\n\r\n\r\n      const green = String(a);\r\n      const riped = String(b);\r\n      const ritu = String(wariai);\r\n      console.log('緑色の粒は'+green+'粒、成熟した粒は'+riped+'粒、<br>推定される帯緑色籾歩合は'+ritu+'％です。');\r\n\r\n\r\n\r\n      //console.log(a);\r\n      //console.log(b);\r\n      //let wariai = Math.round((a/(a+b))*100)\r\n      //console.log(wariai);\r\n\r\n\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Dropzone-page\">\r\n        {this.state.model ? (\r\n          <MagicDropzone\r\n            className=\"Dropzone\"\r\n            accept=\"image/jpeg, image/png, .jpg, .jpeg, .png\"\r\n            multiple={false}\r\n            onDrop={this.onDrop}\r\n          >\r\n            {this.state.preview ? (\r\n              <img\r\n                alt=\"upload preview\"\r\n                onLoad={this.onImageChange}\r\n                className=\"Dropzone-img\"\r\n                src={this.state.preview}\r\n              />\r\n            ) : (\r\n              \"Choose or drop a file.\"\r\n            )}\r\n            <canvas id=\"canvas\" width=\"640\" height=\"640\" />\r\n          </MagicDropzone>\r\n        ) : (\r\n          <div className=\"Dropzone\">Loading model...</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}